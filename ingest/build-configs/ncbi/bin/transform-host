#!/usr/bin/env python3
"""
Transforms host name from using a provided map of host names.
"""
import argparse
import csv
import json
from sys import stderr, stdin, stdout


def parse_args():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("--host-map", required=True,
        help="TSV file that maps `old_name` to the `new_name`.")
    return parser.parse_args()


def parse_host_map(host_map_file: str) -> dict:
    """
    Parse the provided *host_map_file* into a dictionary, where the key
    is the `old_name` and the values are the `new_name`.
    """
    host_map = {}
    with open(host_map_file) as tsv_file:
        reader = csv.DictReader(tsv_file, delimiter="\t")
        for row in reader:
            host_map[row["old_name"]] = row["new_name"]

    return host_map


if __name__ == "__main__":
    args = parse_args()
    host_map = parse_host_map(args.host_map)

    for index, record in enumerate(stdin):
        record = json.loads(record).copy()

        host_field = record.get("host")
        host = host_map.get(host_field)
        if host_field is None:
            print(
                f"WARNING: Unable to transform host in record {index!r} " +
                "because it does not include a `host` field",
                file=stderr,
            )
        elif host_field != "" and host is None:
            print(
                f"WARNING: Unknown host value {host_field!r} in record {index!r}",
                file=stderr,
            )
        else:
            record['host'] = host

        json.dump(record, stdout, allow_nan=False, indent=None, separators=',:')
        print()
